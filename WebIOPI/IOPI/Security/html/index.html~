<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta name="viewport" content = "height = device-height, width = 420, user-scalable = no" /> 
        <title>WebIOPi Security Camera Servo</title>
        <script type="text/javascript" src="/webiopi.js"></script>
        <script type="text/javascript">
        webiopi().ready(function() {
                var content, button;
                content = $("#content");
                        
                                              
              // create a "LED" labeled button for GPIO 22
                button = webiopi().createGPIOButton(22, "LED");
                content.append(button); // append button to content div 
                       
                /*// create a button that output a single pulse
                button = webiopi().createPulseButton("pulse", "Pulse", 22);
                content.append(button); // append button to content div*/
                
                // create a button which output a bit sequence on GPIO 22 with a 100ms period 
                button = webiopi().createSequenceButton("sos", "S.O.S 1", 22, 100, "01010100110011001100101010");
                content.append(button); // append button to content div
                       
                // the previous button will always output the same sequence
                
                // Only for Chrome and Safari, create a slider that pulse out a -45 to +45Â° angle on GPIO 24
              //  button = webiopi().createAngleSlider(24);
                //content.append(button);

		/*button = webiopi().createPulseAngle(24,-45);
                content.append(button);
		
		button = webiopi().createPulseAngle(24,0);
                content.append(button);		

		button = webiopi().createPulseAngle(24,45);
                content.append(button);*/


		// you can also create a button which calls a different function for mouse down and up events
                button = webiopi().createButton("left", "Left", Left);
                content.append(button);

		// you can also create a button which calls a different function for mouse down and up events
                button = webiopi().createButton("right", "Right", Right);
                content.append(button);

		// you can also create a button which calls a different function for mouse down and up events
                button = webiopi().createButton("led", "LED", light);
                content.append(button);

		button = webiopi().createButton("bond", "Bond 007", Bond, Bond);
		content.append(button);
	
		webiopi().refreshGPIO(true);
        });
       
        
var angle = 0;        
        function Left() {
		for(var i = 0; i < 20; i++){
		if(angle > -45){
		angle = angle - 1;
               webiopi().pulseAngle(18, angle);
		}
	}
        }
        
        function Right() {
		for(var j = 0; j < 20; j++){
                	if(angle < 45){
		angle = angle + 1;
               webiopi().pulseAngle(18, angle);
		}
	}
        }
	
	function light(){
		webiopi().toggleValue(22);
			}
/*var bondstat = false;
	function Bond(){
		if(bondstat == false){
			bondstat = true;
		}
		if(bondstat == true){ 
		bondstat = false; 
		webiopi().pulseAngle(24, 0);
		}
	var bangle = -45;
	webiopi().pulseAngle(24, bangle);
		while(bondstat == true){
			for(bangle < 45 && bangle >= -45){
				bangle = bangle +1;
				webiopi().pulseAngle(24, bangle);
			}
			for(bangle <= 45 && bangle > -45){
				bangle = bangle -1;
				webiopi().pulseAngle(24, bangle);
			}
		}

	}*/
	
	function Bond(){
	var k = 0;
	for(;k < 10; k++){
		for(var l = 0; l < 3; l++){
	Right();
	}
		for(var m = 0; m < 3; m++){
	Left();
	}
	}
	
	}
        
        function outputSequence() {
                var sequence = "01010100110011001100101010" // S.O.S. morse code or whatever you want
                // output sequence on gpio 22 with a 100ms period
                webiopi().outputSequence(22, 100, sequence, sequenceCallback);
        }
        
        function sequenceCallback(gpio, data) {
                alert("sequence on " + gpio + " finished with " + data);
        }
        
        
        
        </script>
        <style type="text/css">
                button {
                        display: block;
                        margin: 5px 5px 5px 5px;
                        width: 160px;
                        height: 45px;
                        font-size: 24pt;
                        font-weight: bold;
                        color: black;
                }
                
                input[type="range"] {
                        display: block;
                        width: 160px;
                        height: 45px;
                }
                
                .LOW {
                        background-color: White;
                }
                
                .HIGH {
                        background-color: Red;
                }
        </style>
</head>
<body>
        <div id="content" align="center"></div>
</body>
</html>

